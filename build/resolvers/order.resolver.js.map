{"version":3,"sources":["../../src/resolvers/order.resolver.js"],"names":["module","exports","Query","orders","Models","Order","find","populate","order","parent","args","findById","id","orderUser","context","User","Mutation","deleteOrder","findByIdAndDelete","createOrder","newOrder","AmountTotal","Products","Statut","save","updateOrder","findByIdAndUpdate","_id","console","log"],"mappings":";;;;;;;;;;;;AAAA;;;;;;;;;;AACAA,MAAM,CAACC,OAAP,GAAiB;AACfC,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,EAAE,kBAAM;AACR,aAAOC,MAAM,CAACC,KAAP,CAAaC,IAAb,GAAoBC,QAApB,CAA6B,UAA7B,EAAyCA,QAAzC,CAAkD,MAAlD,CAAP;AACL,KAHI;AAILC,IAAAA,KAAK,EAAE,eAACC,MAAD,EAASC,IAAT,EAAkB;AACvB,aAAON,MAAM,CAACC,KAAP,CAAaM,QAAb,CAAsBD,IAAI,CAACE,EAA3B,CAAP;AACD,KANI;AAOLC,IAAAA,SAAS,EAAE,mBAACJ,MAAD,EAASC,IAAT,EAAeI,OAAf,EAA0B;AACnC,aAAOV,MAAM,CAACC,KAAP,CAAaC,IAAb,CAAkB;AAACS,QAAAA,IAAI,EAACL,IAAI,CAACE;AAAX,OAAlB,EAAkCL,QAAlC,CAA2C,UAA3C,EAAuDA,QAAvD,CAAgE,MAAhE,CAAP;AACH;AATM,GADQ;AAYfS,EAAAA,QAAQ,EAAE;AACRC,IAAAA,WAAW,EAAE,qBAACR,MAAD,EAASC,IAAT,EAAkB;AAC7B,aAAON,MAAM,CAACC,KAAP,CAAaa,iBAAb,CAA+BR,IAAI,CAACE,EAApC,CAAP;AACD,KAHO;AAIRO,IAAAA,WAAW,EAAE,qBAACV,MAAD,EAASC,IAAT,EAAkB;AAC7B,UAAMU,QAAQ,GAAG,IAAIhB,MAAM,CAACC,KAAX,CAAiB;AAChCgB,QAAAA,WAAW,EAAEX,IAAI,CAACW,WADc;AAEhCN,QAAAA,IAAI,EAAEL,IAAI,CAACK,IAFqB;AAGhCO,QAAAA,QAAQ,EAAEZ,IAAI,CAACY,QAHiB;AAIhCC,QAAAA,MAAM,EAAEb,IAAI,CAACa;AAJmB,OAAjB,CAAjB;AAMA,aAAOH,QAAQ,CAACI,IAAT,EAAP;AACD,KAZO;AAaRC,IAAAA,WAAW;AAAA,iFAAE,iBAAOhB,MAAP,EAAeC,IAAf,EAAqBI,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEWV,MAAM,CAACC,KAAP,CAAaqB,iBAAb,CAClB;AAAEC,kBAAAA,GAAG,EAAEjB,IAAI,CAACE;AAAZ,iBADkB,EAElB;AACEW,kBAAAA,MAAM,EAAEb,IAAI,CAACa;AADf,iBAFkB,CAFX;;AAAA;AAEHlB,gBAAAA,KAFG;AAAA,iDAQFA,KARE;;AAAA;AAAA;AAAA;AAUTuB,gBAAAA,OAAO,CAACC,GAAR;;AAVS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAbH;AAZK,CAAjB","sourcesContent":["import * as Models from \"../models\";\nmodule.exports = {\n  Query: {\n    orders: () => {\n          return Models.Order.find().populate('Products').populate('User');\n    },\n    order: (parent, args) => {\n      return Models.Order.findById(args.id);\n    },\n    orderUser: (parent, args, context)=> {\n      return Models.Order.find({User:args.id}).populate('Products').populate('User');\n  },\n  },\n  Mutation: {\n    deleteOrder: (parent, args) => {\n      return Models.Order.findByIdAndDelete(args.id);\n    },\n    createOrder: (parent, args) => {\n      const newOrder = new Models.Order({\n        AmountTotal: args.AmountTotal,\n        User: args.User,\n        Products: args.Products,\n        Statut: args.Statut\n      });\n      return newOrder.save();\n    },\n    updateOrder: async (parent, args, context) => {\n      try {\n        const Order = await Models.Order.findByIdAndUpdate(\n          { _id: args.id },\n          {\n            Statut: args.Statut,\n          }\n        );\n        return Order;\n      } catch (error) {\n        console.log(error);\n      }\n    },\n  },\n};\n"],"file":"order.resolver.js"}