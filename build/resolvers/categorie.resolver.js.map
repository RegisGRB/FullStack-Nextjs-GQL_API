{"version":3,"sources":["../../src/resolvers/categorie.resolver.js"],"names":["module","exports","Query","categories","Models","Categorie","find","populate","categorie","parent","args","findById","id","categoriesProductFilter","regex","RegExp","value","path","match","$and","$or","Title","Description","exec","Mutation","createCategorie","newCategorie","Products","save","deleteCategorie","findByIdAndDelete","updateCategorie","context","findByIdAndUpdate","_id","console","log"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;AACAA,MAAM,CAACC,OAAP,GAAiB;AACfC,EAAAA,KAAK,EAAE;AACLC,IAAAA,UAAU,EAAE,sBAAM;AACZ,aAAOC,MAAM,CAACC,SAAP,CAAiBC,IAAjB,GAAwBC,QAAxB,CAAiC,UAAjC,CAAP;AACL,KAHI;AAILC,IAAAA,SAAS,EAAE,mBAACC,MAAD,EAASC,IAAT,EAAkB;AAC3B,aAAON,MAAM,CAACC,SAAP,CAAiBM,QAAjB,CAA0BD,IAAI,CAACE,EAA/B,CAAP;AACD,KANI;AAOLC,IAAAA,uBAAuB,EAAE,iCAACJ,MAAD,EAASC,IAAT,EAAkB;AACzC,UAAII,KAAK,GAAG,IAAIC,MAAJ,CAAWL,IAAI,CAACM,KAAhB,EAAuB,GAAvB,CAAZ;AAEA,aAAOZ,MAAM,CAACC,SAAP,CAAiBM,QAAjB,CAA0BD,IAAI,CAACE,EAA/B,EAAmCL,QAAnC,CAA4C;AACjDU,QAAAA,IAAI,EAAC,UAD4C;AAGjDC,QAAAA,KAAK,EAAE;AACLC,UAAAA,IAAI,EAAE,CAAC;AAAEC,YAAAA,GAAG,EAAE,CAAC;AAAEC,cAAAA,KAAK,EAAEP;AAAT,aAAD,EAAmB;AAAEQ,cAAAA,WAAW,EAAER;AAAf,aAAnB;AAAP,WAAD;AADD;AAH0C,OAA5C,EAMJS,IANI,EAAP;AAOD;AAjBI,GADQ;AAoBfC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,eAAe,EAAE,yBAAChB,MAAD,EAASC,IAAT,EAAkB;AACjC,UAAMgB,YAAY,GAAG,IAAItB,MAAM,CAACC,SAAX,CAAqB;AACxCgB,QAAAA,KAAK,EAACX,IAAI,CAACW,KAD6B;AAExCM,QAAAA,QAAQ,EAACjB,IAAI,CAACiB;AAF0B,OAArB,CAArB;AAIA,aAAOD,YAAY,CAACE,IAAb,EAAP;AACD,KAPO;AAQRC,IAAAA,eAAe,EAAE,yBAACpB,MAAD,EAASC,IAAT,EAAkB;AACjC,aAAON,MAAM,CAACC,SAAP,CAAiByB,iBAAjB,CAAmCpB,IAAI,CAACE,EAAxC,CAAP;AACD,KAVO;AAWRmB,IAAAA,eAAe;AAAA,qFAAE,iBAAOtB,MAAP,EAAeC,IAAf,EAAqBsB,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAKP5B,MAAM,CAACC,SAAP,CAAiB4B,iBAAjB,CACJ;AAAEC,kBAAAA,GAAG,EAAExB,IAAI,CAACE;AAAZ,iBADI,EAEJ;AACES,kBAAAA,KAAK,EAACX,IAAI,CAACW,KADb;AAEEM,kBAAAA,QAAQ,EAACjB,IAAI,CAACiB;AAFhB,iBAFI,CALO;;AAAA;AAAA,iDAYNvB,MAAM,CAACC,SAAP,CAAiBM,QAAjB,CAA0BD,IAAI,CAACE,EAA/B,EAAmCL,QAAnC,CAA4C,UAA5C,CAZM;;AAAA;AAAA;AAAA;AAcb4B,gBAAAA,OAAO,CAACC,GAAR;;AAda;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAXP;AApBK,CAAjB","sourcesContent":["import * as Models from \"../models\";\nmodule.exports = {\n  Query: {\n    categories: () => {\n          return Models.Categorie.find().populate('Products');\n    },\n    categorie: (parent, args) => {\n      return Models.Categorie.findById(args.id);\n    },\n    categoriesProductFilter: (parent, args) => {\n      let regex = new RegExp(args.value, \"i\");\n   \n      return Models.Categorie.findById(args.id).populate({\n        path:\"Products\",\n   \n        match: {\n          $and: [{ $or: [{ Title: regex }, { Description: regex }] }],\n        },\n      }).exec();\n    },\n  },\n  Mutation: {\n    createCategorie: (parent, args) => {\n      const newCategorie = new Models.Categorie({\n        Title:args.Title,\n        Products:args.Products\n      });\n      return newCategorie.save();\n    },\n    deleteCategorie: (parent, args) => {\n      return Models.Categorie.findByIdAndDelete(args.id);\n    },\n    updateCategorie: async (parent, args, context) => {\n      // if (!context.req.isAuth) {\n      //   throw new Error('Unauthenticated!');\n      // }\n      try {\n        await Models.Categorie.findByIdAndUpdate(\n          { _id: args.id },\n          { \n            Title:args.Title,\n            Products:args.Products\n         }\n        );\n        return Models.Categorie.findById(args.id).populate('Products');\n      } catch (error) {\n        console.log(error);\n      }\n    },\n  },\n};\n"],"file":"categorie.resolver.js"}